[tox]
minversion = 3.8.0
basepython = python3.7
envlist =
    clean,
; use virtualenv versions < 20.22 for python version < 3.6
    py27,
    py36,
    py37,
    py38,
    py39,
    py310,
    coverage,
    flake8,
    mypy
isolated_build = true
skip_missing_interpreters = true

[gh-actions]
python =
    2.7: py27
    3.6: py36
    3.7: py37, flake8, mypy
    3.8: py38
    3.9: py39
    3.10: py310

[testenv]
passenv = *
setenv=
    PYTHONPATH = {toxinidir}
; https://github.com/pytest-dev/pytest-cov/blob/master/docs/plugins.rst
;    COV_CORE_CONFIG={toxinidir}/.coveragerc
deps=
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
commands=
    pytest --basetemp={envtmpdir} --verbose --color=yes --cov=pymagic9 --cov-append --assert=plain --cov-config={toxinidir}/tox.ini
    coverage report
    coverage xml

[testenv:clean]
deps =
    coverage==5.2.1
skip_install = true
commands = coverage erase

[testenv:coverage]
passenv = CODECOV_TOKEN
deps =
; pipenv for .env file with CODECOV_TOKEN
    pipenv==2023.7.11
    codecov==2.1.13
commands =
    pipenv install --dev
; generate xml for codecov
    coverage xml
    coverage html
    coverage report --fail-under=90 -m
; https://github.com/tox-dev/tox-travis/issues/106#issuecomment-394154120
    pipenv run codecov -e CODECOV_TOKEN

[testenv:docs]
deps = -r docs/requirements.txt
commands =
    sphinx-multiversion docs/source docs/_build -D 'smv_branch_whitelist=None'

[testenv:flake8]
deps =
    flake8==3.9.2
    importlib_metadata<5
commands =
    flake8 src tests

[testenv:mypy]
deps =
    mypy==0.910
commands =
    mypy src

[testenv:build_wheel]
skip_install = True
deps =
    wheel
    docutils
    pygments
commands =
    python -c 'import shutil; (shutil.rmtree(p, ignore_errors=True) for p in ["build", "dist"]);'
    python setup.py sdist bdist_wheel

[testenv:test_upload]
skip_install = True
deps =
    twine
commands =
    python -m twine upload --repository testpypi dist/* --verbose --skip-existing

[testenv:test_venv]
skip_install = True
deps =
commands =
    pip install -i https://test.pypi.org/simple/ pymagic9

[testenv:pypi_upload]
skip_install = True
deps =
    twine
commands =
    python -m twine upload dist/* --verbose --skip-existing

[testenv:pypi_venv]
skip_install = True
deps =
commands =
    pip install pymagic9
